/**: # we give this config to two nodes, so we cant just "pick" a node for these params
    ros__parameters:
        mqtt:
            client:
                protocol: 4      # MQTTv311
            connection:
                # host: 20.240.40.232 # these are set in the launch file, so we could have args from outside
                # port: 1884
                keepalive: 60
            # private_path: ros2test #also set in the launch file
        serializer: json:dumps
        deserializer: json:loads
        # this needs to be set accordingly 
        # TODO maybe modify the mqtt_brdige to acquire these from the yaml directly?
        n_bridges: 14
        bridge:
            # dont forget to add the ".msg" part!
            #  the ~ in front will fill with smarc/<robot_name>/ for mqtt
            #  and this node is run under /<robot_name>/ in ROS, relative topics etc.

            # each one needs to be named "bridgeN" in ros2 version...
            ###
            # ROS -> MQTT
            ###
            # core stuff
            bridge1: ["mqtt_bridge.bridge:RosToMqttBridge", "std_msgs.msg:Empty", "core/abort", "~/abort"]
            bridge2: ["mqtt_bridge.bridge:RosToMqttBridge", "sam_msgs.msg:Leak", "core/leak", "~/core/leak"]
            bridge3: ["mqtt_bridge.bridge:RosToMqttBridge", "sensor_msgs.msg:BatteryState", "core/battery", "~/core/battery"]
            bridge4: ["mqtt_bridge.bridge:RosToMqttBridge", "sensor_msgs.msg:NavSatFix", "core/gps", "~/core/gps"]
            bridge5: ["mqtt_bridge.bridge:RosToMqttBridge", "sam_msgs.msg:PercentStamped", "core/vbs_fb", "~/core/vbs_fb"]
            bridge6: ["mqtt_bridge.bridge:RosToMqttBridge", "sam_msgs.msg:PercentStamped", "core/lcg_fb", "~/core/lcg_fb"]
            bridge7: ["mqtt_bridge.bridge:RosToMqttBridge", "smarc_msgs.msg:ThrusterFeedback", "core/thruster1_fb", "~/core/thruster1_fb"]
            bridge8: ["mqtt_bridge.bridge:RosToMqttBridge", "smarc_msgs.msg:ThrusterFeedback", "core/thruster2_fb", "~/core/thruster2_fb"]
            # latlon: ["mqtt_bridge.bridge:RosToMqttBridge", "geographic_msgs.msg:GeoPoint", "dr/lat_lon", "~/dr/lat_lon"]
            # missing: depth, roll, pitch, yaw, altitude, dr/lat_lon
            # bt stuff
            bridge9:  ["mqtt_bridge.bridge:RosToMqttBridge", "smarc_mission_msgs.msg:MissionControl", "mission/mission_control", "~/bt/mission_control"]
            bridge10: ["mqtt_bridge.bridge:RosToMqttBridge", "smarc_mission_msgs.msg:BTCommand", "mission/bt_command", "~/bt/bt_cmd"]
            bridge11: ["mqtt_bridge.bridge:RosToMqttBridge", "std_msgs.msg:Empty", "core/heartbeat", "~/bt/heartbeat"]
            bridge12: ["mqtt_bridge.bridge:RosToMqttBridge", "py_trees_ros_interfaces.msg:Behaviour", "mission/bt_tip", "~/bt/tip"]
            # missing: last_wp
            ###
            # MQTT -> ROS
            ###
            bridge13: ["mqtt_bridge.bridge:MqttToRosBridge", "smarc_mission_msgs.msg:MissionControl", "~/bt_cmd/mission_control", "mission/mission_control"]
            bridge14: ["mqtt_bridge.bridge:MqttToRosBridge", "smarc_mission_msgs.msg:BTCommand", "~/bt_cmd/bt_cmd", "mission/bt_command"]


        
        #   - factory: mqtt_bridge.bridge:RosToMqttBridge
        #     msg_type: std_msgs.msg:Float64
        #     topic_from: dr/depth
        #     topic_to: ~/dr/depth
        #     frequency: 2

        #   - factory: mqtt_bridge.bridge:RosToMqttBridge
        #     msg_type: std_msgs.msg:Float64
        #     topic_from: dr/roll
        #     topic_to: ~/dr/roll
        #     frequency: 2

        #   - factory: mqtt_bridge.bridge:RosToMqttBridge
        #     msg_type: std_msgs.msg:Float64
        #     topic_from: dr/pitch
        #     topic_to: ~/dr/pitch
        #     frequency: 2

        #   - factory: mqtt_bridge.bridge:RosToMqttBridge
        #     msg_type: std_msgs.msg:Float64
        #     topic_from: dr/yaw
        #     topic_to: ~/dr/yaw
        #     frequency: 2

        #   - factory: mqtt_bridge.bridge:RosToMqttBridge
        #     msg_type: std_msgs.msg:Float64
        #     topic_from: dr/altitude
        #     topic_to: ~/dr/altitude
        #     frequency: 2

        #   - factory: mqtt_bridge.bridge:RosToMqttBridge
        #     msg_type: smarc_bt.msg:GotoWaypoint
        #     topic_from: smarc_bt/last_wp
        #     topic_to: ~/bt/last_wp
        #     frequency: 0.5

        #   - factory: mqtt_bridge.bridge:RosToMqttBridge
        #     msg_type: py_trees_msgs.msg:Behaviour
        #     topic_from: smarc_bt/tip
        #     topic_to: ~/bt/tip
        #     frequency: 1






